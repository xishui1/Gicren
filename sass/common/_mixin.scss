$px:1rem*1/75 !default;
@mixin clearfix() {
    &::after {
        display: block;
        content: "";
        clear: both;
    }
}

@mixin keep-all() {

    word-break: keep-all;
    white-space: nowrap;
}

@mixin nowrap($textoverflow:ellipsis) {
    @include keep-all();
    overflow: hidden;
    text-overflow: $textoverflow;
}

%commonbg {
    background: url(../images/common.svg);
    background-size: 100*$px 100*$px;
}

@mixin hz($attr, $value) {
    #{$attr}: $value;
    -ms-#{$attr}: $value;
    -moz-#{$attr}: $value;
    -webkit-#{$attr}: $value;
    -o-#{$attr}: $value;
}

@mixin placeholder($selector, $color) {
    #{$selector}::-webkit-input-placeholder {
        color: $color
    }
    #{$selector}::-moz-placeholder {
        color: $color
    }
    #{$selector}:-ms-input-placeholder {
        color: $color
    }
}

@mixin clearspace() {
    word-spacing: -4*$px;
}


@mixin dflex()
  {
    display:         box;
    display: -webkit-box;
    display:    -moz-box;
    display: -ms-flexbox;
    display: -webkit-box-flex;
    display:         box-flex;
    display: -webkit-flex;
    display:         flex;
}
@mixin flex($value: 1)
{
    display: block;
    -webkit-box-flex: $value;
       -moz-box-flex: $value;
    -webkit-box-flex: $value;
    -webkit-flex: $value;
        -ms-flex: $value;
            flex: $value;
    @include box-sizing(border-box);
}
@mixin flex-direction($value)
{
  @if $value == 'column'{
    -webkit-box-orient: vertical;
    -moz-box-orient: vertical;
    box-orient: vertical;
  }
    flex-direction:$value;
    -webkit-flex-direction: $value;
    flex-direction: $value;
} 
@mixin align-items($value){

  -webkit-align-items: $value;
  align-items: $value;
  -webkit-box-align: $value;
}
@mixin  appearance($value){
    -webkit-appearance: $value;
    -moz-appearance: $value;
    -ms-appearance: $value;
    -o-appearance: $value;
    appearance: $value;
}